TESTING

testing specs for recipes:
name: string
summary: text
description: text

- name must be present
- name must be between 5 characters and less than 100 characters
- summary must be present
- summary must be between 10 characters and less than 150 characters
- description must be present
- description must be between 20 and 500 characters
- chef_id must be present


testing specs for chefs:
chefname: string
email: string

- chefname must be present
- chefname must be between 3 characters and less than 40 characters
- email must be present
- email must be unique (used in logins)
- email must be valid



AUTHENTICATION

What we have already:
- Chef model & validations
- Chef table with columns chefname & email

What we need to do:
- Add passwords to chef table so they can be authenticated and logged in
- Use email as login credentials, since email is unique
- Add ability to register new chefs to use the app
- Ability to display chefs profile
- Ability to list all chefs
- Ability for chefs to login/logout
- Restrict actions like create/edit recipe and like feature for logged in chefs only
- Restrict edit of other chef's recipes


AUTHENTICATION updates
- Show recipe page -> Ability to edit/update only own recipes
- Navigation partial -> Toggle menu, restrict new
- Restrict thumbs up/down action to logged in users only
- Recipe - update to current_user
- Like - update to current_user
- Before_action :require_user, except: [:show, :index]
- Before_action :require_some_user for chefs, only: [:edit, :update]


MANY TO MANY ASSOCIATION:
- Implement using has_many through association
- Requires a join table
- One object/row in one table can be associated with multiple rows in a 2nd table and vise-versa
